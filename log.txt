- Generating browser application bundles (phase: setup)...
✔ Browser application bundle generation complete.
✔ Browser application bundle generation complete.

Warning: /Users/redvasa/Documents/oppia/oppia/core/templates/pages/common-imports.ts depends on 'core-js/es7/reflect'. CommonJS or AMD dependencies can cause optimization bailouts.
For more info see: https://angular.io/guide/build#configuring-commonjs-dependencies

Warning: /Users/redvasa/Documents/oppia/oppia/core/templates/services/platform-feature.service.ts depends on 'lodash/isEqual'. CommonJS or AMD dependencies can cause optimization bailouts.
For more info see: https://angular.io/guide/build#configuring-commonjs-dependencies

Warning: /Users/redvasa/Documents/oppia/oppia/core/templates/services/search.service.ts depends on 'lodash/cloneDeep'. CommonJS or AMD dependencies can cause optimization bailouts.
For more info see: https://angular.io/guide/build#configuring-commonjs-dependencies

Warning: /Users/redvasa/Documents/oppia/oppia/node_modules/mathjs/lib/esm/function/probability/util/seededRNG.js depends on 'seedrandom'. CommonJS or AMD dependencies can cause optimization bailouts.
For more info see: https://angular.io/guide/build#configuring-commonjs-dependencies



./node_modules/get-pixels-frame-info-update/dom-pixels.js:3:11-26 - Error: Module not found: Error: Can't resolve 'path' in '/Users/redvasa/Documents/oppia/oppia/node_modules/get-pixels-frame-info-update'

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
	- add a fallback 'resolve.fallback: { "path": require.resolve("path-browserify") }'
	- install 'path-browserify'
If you don't want to include a polyfill, you can use an empty module like this:
	resolve.fallback: { "path": false }

./node_modules/pngjs-nozlib/lib/packer-sync.js:5:11-26 - Error: Module not found: Error: Can't resolve 'zlib' in '/Users/redvasa/Documents/oppia/oppia/node_modules/pngjs-nozlib/lib'

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
	- add a fallback 'resolve.fallback: { "zlib": require.resolve("browserify-zlib") }'
	- install 'browserify-zlib'
If you don't want to include a polyfill, you can use an empty module like this:
	resolve.fallback: { "zlib": false }

./node_modules/pngjs-nozlib/lib/packer.js:11:11-26 - Error: Module not found: Error: Can't resolve 'zlib' in '/Users/redvasa/Documents/oppia/oppia/node_modules/pngjs-nozlib/lib'

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
	- add a fallback 'resolve.fallback: { "zlib": require.resolve("browserify-zlib") }'
	- install 'browserify-zlib'
If you don't want to include a polyfill, you can use an empty module like this:
	resolve.fallback: { "zlib": false }

./node_modules/pngjs-nozlib/lib/parser-async.js:5:11-26 - Error: Module not found: Error: Can't resolve 'zlib' in '/Users/redvasa/Documents/oppia/oppia/node_modules/pngjs-nozlib/lib'

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
	- add a fallback 'resolve.fallback: { "zlib": require.resolve("browserify-zlib") }'
	- install 'browserify-zlib'
If you don't want to include a polyfill, you can use an empty module like this:
	resolve.fallback: { "zlib": false }

./node_modules/pngjs-nozlib/lib/parser-sync.js:5:11-26 - Error: Module not found: Error: Can't resolve 'zlib' in '/Users/redvasa/Documents/oppia/oppia/node_modules/pngjs-nozlib/lib'

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
	- add a fallback 'resolve.fallback: { "zlib": require.resolve("browserify-zlib") }'
	- install 'browserify-zlib'
If you don't want to include a polyfill, you can use an empty module like this:
	resolve.fallback: { "zlib": false }


